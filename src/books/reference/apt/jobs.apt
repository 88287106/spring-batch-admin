  ------
  Customising Jobs

Add your Own Job Executions

  To add job executions from another process just execute a job (e.g. from command line)
  against the same database that is
  used by Spring Batch Admin, and the UI picks up the meta data from the 
  usual Spring Batch tables.

Add your Own Jobs For Launching

  Include Spring XML files in <<<META-INF/batch>>>.  Each file should be self-contained
  (except for Batch execution components like the <<<jobRepository>>> which are provided
  centrally), and carry one or more bean definitions for a Spring Batch <<<Job>>>.  When
  the application starts these files are scanned and loaded as child contexts, and then 
  the jobs are registered with a <<<JobRegistry>>> in the parent.  Because they are 
  child contexts you don't have to worry about name clashes between different XML files 
  or different contributing JARs (except for the jobs which must have unique names, at 
  present, but perhaps not when we get to a release).  
  
  As a convenience, the child contexts inherit
  property placeholders and AOP configuration from the parent (this is not the default
  behaviour for a child context in Spring).  This means you can control those things centrally
  if you need to.  Of course, the child can always create its own placeholder definition and AOP
  configuration, but these will not affect the parent or any of its siblings.
  