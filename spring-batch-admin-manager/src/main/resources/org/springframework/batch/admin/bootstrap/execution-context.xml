<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />

	<bean class="org.springframework.batch.core.scope.StepScope" />

	<bean id="simpleJob" class="org.springframework.batch.core.job.SimpleJob"
		abstract="true">
		<property name="jobRepository" ref="jobRepository" />
		<property name="restartable" value="true" />
	</bean>

	<bean id="taskletStep" class="org.springframework.batch.core.step.tasklet.TaskletStep"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="allowStartIfComplete" value="true" />
	</bean>

	<bean id="simpleStep"
		class="org.springframework.batch.core.step.item.SimpleStepFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="jobRepository" ref="jobRepository" />
		<property name="startLimit" value="100" />
		<property name="commitInterval" value="1" />
	</bean>

	<bean id="skipLimitStep"
		class="org.springframework.batch.core.step.item.FaultTolerantStepFactoryBean"
		parent="simpleStep" abstract="true">
		<property name="skipLimit" value="0" />
	</bean>

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor" ref="taskExecutor" />
	</bean>

	<bean id="poolTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="2"></property>
		<property name="maxPoolSize" value="20"></property>
	</bean>

	<bean id="taskExecutor" parent="poolTaskExecutor" />

	<bean id="throttledTaskExecutor"
		class="org.springframework.batch.admin.util.ThrottledTaskExecutor">
		<property name="taskExecutor">
			<bean parent="poolTaskExecutor" />
		</property>
	</bean>

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean"
		p:dataSource-ref="dataSource" p:transactionManager-ref="transactionManager" />

	<bean id="jobExplorer"
		class="org.springframework.batch.core.explore.support.JobExplorerFactoryBean"
		p:dataSource-ref="dataSource" />

	<bean id="jobLoader"
		class="org.springframework.batch.core.configuration.support.ClassPathXmlJobLoader">
		<property name="jobPaths" value="classpath*:/META-INF/batch/*-context.xml" />
		<property name="jobRegistry" ref="jobRegistry" />
	</bean>

	<bean id="jobRegistry"
		class="org.springframework.batch.core.configuration.support.MapJobRegistry" />

	<bean id="jobInstanceDao"
		class="org.springframework.batch.admin.service.JdbcSearchableJobInstanceDao">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="jobExecutionDao"
		class="org.springframework.batch.admin.service.JdbcSearchableJobExecutionDao">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="stepExecutionDao"
		class="org.springframework.batch.admin.service.JdbcSearchableStepExecutionDao">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean class="org.springframework.batch.admin.service.SimpleJobService">
		<constructor-arg ref="jobInstanceDao" />
		<constructor-arg ref="jobExecutionDao" />
		<constructor-arg ref="stepExecutionDao" />
		<constructor-arg ref="jobRepository" />
		<constructor-arg ref="jobLauncher" />
		<constructor-arg ref="jobRegistry" />
		<constructor-arg>
			<bean
				class="org.springframework.batch.core.repository.dao.JdbcExecutionContextDao">
				<property name="jdbcTemplate">
					<bean class="org.springframework.jdbc.core.simple.SimpleJdbcTemplate">
						<constructor-arg ref="dataSource" />
					</bean>
				</property>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="customEditorConfigurer"
		class="org.springframework.beans.factory.config.CustomEditorConfigurer">
		<property name="customEditors">
			<map>
				<entry key="int[]"
					value="org.springframework.batch.support.IntArrayPropertyEditor" />
				<entry key="double[]"
					value="org.springframework.batch.support.IntArrayPropertyEditor" />
				<entry key="java.lang.Class[]"
					value="org.springframework.beans.propertyeditors.ClassArrayEditor" />
				<entry key="org.springframework.batch.item.file.transform.Range[]"
					value="org.springframework.batch.item.file.transform.RangeArrayPropertyEditor" />
				<!--
					entry key="java.util.Date"> <bean
					class="org.springframework.beans.propertyeditors.CustomDateEditor">
					<constructor-arg> <bean class="java.text.SimpleDateFormat">
					<constructor-arg value="yyyyMMdd" /> </bean> </constructor-arg>
					<constructor-arg value="false" /> </bean> </entry
				-->
			</map>
		</property>
	</bean>

</beans>